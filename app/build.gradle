plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
    id 'dagger.hilt.android.plugin'
}
ext {
    // Version
    versionMajor = 0
    versionMinor = 1
    versionPatch = 0
    versionBuild = 0
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "com.golnaz.store_app"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode computeVersionCode()
        versionName computeVersionName()

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
    dataBinding {
        enabled = true
    }
    viewBinding {
        enabled = true
    }

}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.6.0'
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.0'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.3.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.1'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    //Navigation
    implementation(Navigation.navigationUi)
    implementation(Navigation.navigationFragment)


    //Test
    testImplementation(Robolectric.robolectricBaseLibrary)
    //ViewModel
    implementation(ViewModel.lifeCycleExt)
    implementation(ViewModel.lifeCycleLiveData)
    implementation(ViewModel.lifeCycleViewModel)
    implementation(ViewModel.arch)

    //Hilt
    implementation(Hilt.hilt)
    kapt(Hilt.hiltKapt)

    //Retrofit
    implementation(Retrofit.retrofit)
    implementation(Retrofit.moshi)
    implementation(Retrofit.moshiConverter)
    kapt(Retrofit.moshiKapt)
    implementation(Retrofit.interceptor)
    implementation(Retrofit.rxAdapterRetrofit)

    //Picasso
    implementation(Picasso.picasso)

    //RxJava
    implementation(RxJava.rxLibrary)
    implementation(RxJava.rxandroidLibrary)
    implementation(RxJava.rxBinding)
}
def computeVersionName() {
    return "${versionMajor}.${versionMinor}.${versionPatch}"
}

def computeVersionCode() {
    return new Date().format("yyyyMMdd").toInteger()
}